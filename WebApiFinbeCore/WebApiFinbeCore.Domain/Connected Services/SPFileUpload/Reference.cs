//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApiFinbeCore.Domain.SPFileUpload {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SPClientAuthenticationMode", Namespace="http://schemas.datacontract.org/2004/07/Infopoint.NET.SharepointType")]
    public enum SPClientAuthenticationMode : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Default = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FormsAuthentication = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Anonymous = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Credenciales", Namespace="http://schemas.datacontract.org/2004/07/Infopoint.NET")]
    [System.SerializableAttribute()]
    public partial class Credenciales : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContraseniaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DominioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsuarioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contrasenia {
            get {
                return this.ContraseniaField;
            }
            set {
                if ((object.ReferenceEquals(this.ContraseniaField, value) != true)) {
                    this.ContraseniaField = value;
                    this.RaisePropertyChanged("Contrasenia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dominio {
            get {
                return this.DominioField;
            }
            set {
                if ((object.ReferenceEquals(this.DominioField, value) != true)) {
                    this.DominioField = value;
                    this.RaisePropertyChanged("Dominio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usuario {
            get {
                return this.UsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.UsuarioField, value) != true)) {
                    this.UsuarioField = value;
                    this.RaisePropertyChanged("Usuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SPFormaDatos", Namespace="http://schemas.datacontract.org/2004/07/Infopoint.NET.SharepointType")]
    public enum SPFormaDatos : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DescripcionIDTitulo = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TodosLosCampos = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SPList", Namespace="http://schemas.datacontract.org/2004/07/Infopoint.NET.SharepointType")]
    [System.SerializableAttribute()]
    public partial class SPList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AllowContentTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BaseTemplateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApiFinbeCore.Domain.SPFileUpload.SPBaseType BaseTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApiFinbeCore.Domain.SPFileUpload.SPBrowserFileHandling BrowserFileHandlingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ContentTypesEnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DefaultContentApprovalWorkflowIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultDisplayFormUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultEditFormUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultNewFormUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultViewUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DirectionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DocumentTemplateUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApiFinbeCore.Domain.SPFileUpload.SPDraftVisibilityType DraftVersionVisibilityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableAttachmentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableFolderCreationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableMinorVersionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableModerationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableVersioningField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ForceCheckoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasExternalDataSourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HiddenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApplicationListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCatalogField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSiteAssetsLibraryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastItemDeletedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastItemModifiedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MultipleDataListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool NoCrawlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OnQuickLaunchField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentWebUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SchemaXmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ServerTemplateCanCreateFoldersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TemplateFeatureIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidationFormulaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValidationMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowContentTypes {
            get {
                return this.AllowContentTypesField;
            }
            set {
                if ((this.AllowContentTypesField.Equals(value) != true)) {
                    this.AllowContentTypesField = value;
                    this.RaisePropertyChanged("AllowContentTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BaseTemplate {
            get {
                return this.BaseTemplateField;
            }
            set {
                if ((this.BaseTemplateField.Equals(value) != true)) {
                    this.BaseTemplateField = value;
                    this.RaisePropertyChanged("BaseTemplate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApiFinbeCore.Domain.SPFileUpload.SPBaseType BaseType {
            get {
                return this.BaseTypeField;
            }
            set {
                if ((this.BaseTypeField.Equals(value) != true)) {
                    this.BaseTypeField = value;
                    this.RaisePropertyChanged("BaseType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApiFinbeCore.Domain.SPFileUpload.SPBrowserFileHandling BrowserFileHandling {
            get {
                return this.BrowserFileHandlingField;
            }
            set {
                if ((this.BrowserFileHandlingField.Equals(value) != true)) {
                    this.BrowserFileHandlingField = value;
                    this.RaisePropertyChanged("BrowserFileHandling");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContentTypesEnabled {
            get {
                return this.ContentTypesEnabledField;
            }
            set {
                if ((this.ContentTypesEnabledField.Equals(value) != true)) {
                    this.ContentTypesEnabledField = value;
                    this.RaisePropertyChanged("ContentTypesEnabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Created {
            get {
                return this.CreatedField;
            }
            set {
                if ((this.CreatedField.Equals(value) != true)) {
                    this.CreatedField = value;
                    this.RaisePropertyChanged("Created");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DefaultContentApprovalWorkflowId {
            get {
                return this.DefaultContentApprovalWorkflowIdField;
            }
            set {
                if ((this.DefaultContentApprovalWorkflowIdField.Equals(value) != true)) {
                    this.DefaultContentApprovalWorkflowIdField = value;
                    this.RaisePropertyChanged("DefaultContentApprovalWorkflowId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultDisplayFormUrl {
            get {
                return this.DefaultDisplayFormUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultDisplayFormUrlField, value) != true)) {
                    this.DefaultDisplayFormUrlField = value;
                    this.RaisePropertyChanged("DefaultDisplayFormUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultEditFormUrl {
            get {
                return this.DefaultEditFormUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultEditFormUrlField, value) != true)) {
                    this.DefaultEditFormUrlField = value;
                    this.RaisePropertyChanged("DefaultEditFormUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultNewFormUrl {
            get {
                return this.DefaultNewFormUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultNewFormUrlField, value) != true)) {
                    this.DefaultNewFormUrlField = value;
                    this.RaisePropertyChanged("DefaultNewFormUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultViewUrl {
            get {
                return this.DefaultViewUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultViewUrlField, value) != true)) {
                    this.DefaultViewUrlField = value;
                    this.RaisePropertyChanged("DefaultViewUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Direction {
            get {
                return this.DirectionField;
            }
            set {
                if ((object.ReferenceEquals(this.DirectionField, value) != true)) {
                    this.DirectionField = value;
                    this.RaisePropertyChanged("Direction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentTemplateUrl {
            get {
                return this.DocumentTemplateUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTemplateUrlField, value) != true)) {
                    this.DocumentTemplateUrlField = value;
                    this.RaisePropertyChanged("DocumentTemplateUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApiFinbeCore.Domain.SPFileUpload.SPDraftVisibilityType DraftVersionVisibility {
            get {
                return this.DraftVersionVisibilityField;
            }
            set {
                if ((this.DraftVersionVisibilityField.Equals(value) != true)) {
                    this.DraftVersionVisibilityField = value;
                    this.RaisePropertyChanged("DraftVersionVisibility");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableAttachments {
            get {
                return this.EnableAttachmentsField;
            }
            set {
                if ((this.EnableAttachmentsField.Equals(value) != true)) {
                    this.EnableAttachmentsField = value;
                    this.RaisePropertyChanged("EnableAttachments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableFolderCreation {
            get {
                return this.EnableFolderCreationField;
            }
            set {
                if ((this.EnableFolderCreationField.Equals(value) != true)) {
                    this.EnableFolderCreationField = value;
                    this.RaisePropertyChanged("EnableFolderCreation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableMinorVersions {
            get {
                return this.EnableMinorVersionsField;
            }
            set {
                if ((this.EnableMinorVersionsField.Equals(value) != true)) {
                    this.EnableMinorVersionsField = value;
                    this.RaisePropertyChanged("EnableMinorVersions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableModeration {
            get {
                return this.EnableModerationField;
            }
            set {
                if ((this.EnableModerationField.Equals(value) != true)) {
                    this.EnableModerationField = value;
                    this.RaisePropertyChanged("EnableModeration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableVersioning {
            get {
                return this.EnableVersioningField;
            }
            set {
                if ((this.EnableVersioningField.Equals(value) != true)) {
                    this.EnableVersioningField = value;
                    this.RaisePropertyChanged("EnableVersioning");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ForceCheckout {
            get {
                return this.ForceCheckoutField;
            }
            set {
                if ((this.ForceCheckoutField.Equals(value) != true)) {
                    this.ForceCheckoutField = value;
                    this.RaisePropertyChanged("ForceCheckout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasExternalDataSource {
            get {
                return this.HasExternalDataSourceField;
            }
            set {
                if ((this.HasExternalDataSourceField.Equals(value) != true)) {
                    this.HasExternalDataSourceField = value;
                    this.RaisePropertyChanged("HasExternalDataSource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hidden {
            get {
                return this.HiddenField;
            }
            set {
                if ((this.HiddenField.Equals(value) != true)) {
                    this.HiddenField = value;
                    this.RaisePropertyChanged("Hidden");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApplicationList {
            get {
                return this.IsApplicationListField;
            }
            set {
                if ((this.IsApplicationListField.Equals(value) != true)) {
                    this.IsApplicationListField = value;
                    this.RaisePropertyChanged("IsApplicationList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCatalog {
            get {
                return this.IsCatalogField;
            }
            set {
                if ((this.IsCatalogField.Equals(value) != true)) {
                    this.IsCatalogField = value;
                    this.RaisePropertyChanged("IsCatalog");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSiteAssetsLibrary {
            get {
                return this.IsSiteAssetsLibraryField;
            }
            set {
                if ((this.IsSiteAssetsLibraryField.Equals(value) != true)) {
                    this.IsSiteAssetsLibraryField = value;
                    this.RaisePropertyChanged("IsSiteAssetsLibrary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemCount {
            get {
                return this.ItemCountField;
            }
            set {
                if ((this.ItemCountField.Equals(value) != true)) {
                    this.ItemCountField = value;
                    this.RaisePropertyChanged("ItemCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastItemDeletedDate {
            get {
                return this.LastItemDeletedDateField;
            }
            set {
                if ((this.LastItemDeletedDateField.Equals(value) != true)) {
                    this.LastItemDeletedDateField = value;
                    this.RaisePropertyChanged("LastItemDeletedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastItemModifiedDate {
            get {
                return this.LastItemModifiedDateField;
            }
            set {
                if ((this.LastItemModifiedDateField.Equals(value) != true)) {
                    this.LastItemModifiedDateField = value;
                    this.RaisePropertyChanged("LastItemModifiedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MultipleDataList {
            get {
                return this.MultipleDataListField;
            }
            set {
                if ((this.MultipleDataListField.Equals(value) != true)) {
                    this.MultipleDataListField = value;
                    this.RaisePropertyChanged("MultipleDataList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool NoCrawl {
            get {
                return this.NoCrawlField;
            }
            set {
                if ((this.NoCrawlField.Equals(value) != true)) {
                    this.NoCrawlField = value;
                    this.RaisePropertyChanged("NoCrawl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnQuickLaunch {
            get {
                return this.OnQuickLaunchField;
            }
            set {
                if ((this.OnQuickLaunchField.Equals(value) != true)) {
                    this.OnQuickLaunchField = value;
                    this.RaisePropertyChanged("OnQuickLaunch");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentWebUrl {
            get {
                return this.ParentWebUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentWebUrlField, value) != true)) {
                    this.ParentWebUrlField = value;
                    this.RaisePropertyChanged("ParentWebUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SchemaXml {
            get {
                return this.SchemaXmlField;
            }
            set {
                if ((object.ReferenceEquals(this.SchemaXmlField, value) != true)) {
                    this.SchemaXmlField = value;
                    this.RaisePropertyChanged("SchemaXml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ServerTemplateCanCreateFolders {
            get {
                return this.ServerTemplateCanCreateFoldersField;
            }
            set {
                if ((this.ServerTemplateCanCreateFoldersField.Equals(value) != true)) {
                    this.ServerTemplateCanCreateFoldersField = value;
                    this.RaisePropertyChanged("ServerTemplateCanCreateFolders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TemplateFeatureId {
            get {
                return this.TemplateFeatureIdField;
            }
            set {
                if ((this.TemplateFeatureIdField.Equals(value) != true)) {
                    this.TemplateFeatureIdField = value;
                    this.RaisePropertyChanged("TemplateFeatureId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidationFormula {
            get {
                return this.ValidationFormulaField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationFormulaField, value) != true)) {
                    this.ValidationFormulaField = value;
                    this.RaisePropertyChanged("ValidationFormula");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValidationMessage {
            get {
                return this.ValidationMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidationMessageField, value) != true)) {
                    this.ValidationMessageField = value;
                    this.RaisePropertyChanged("ValidationMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SPBaseType", Namespace="http://schemas.datacontract.org/2004/07/Infopoint.NET.SharepointType")]
    public enum SPBaseType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GenericList = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DocumentLibrary = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unused = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DiscussionBoard = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Survey = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Issue = 5,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SPBrowserFileHandling", Namespace="http://schemas.datacontract.org/2004/07/Infopoint.NET.SharepointType")]
    public enum SPBrowserFileHandling : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Permissive = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Strict = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SPDraftVisibilityType", Namespace="http://schemas.datacontract.org/2004/07/Infopoint.NET.SharepointType")]
    public enum SPDraftVisibilityType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reader = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Author = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Approver = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SPFolder", Namespace="http://schemas.datacontract.org/2004/07/Infopoint.NET.SharepointType")]
    [System.SerializableAttribute()]
    public partial class SPFolder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentFolderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerRelativeUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WelcomePageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemCount {
            get {
                return this.ItemCountField;
            }
            set {
                if ((this.ItemCountField.Equals(value) != true)) {
                    this.ItemCountField = value;
                    this.RaisePropertyChanged("ItemCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentFolder {
            get {
                return this.ParentFolderField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentFolderField, value) != true)) {
                    this.ParentFolderField = value;
                    this.RaisePropertyChanged("ParentFolder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerRelativeUrl {
            get {
                return this.ServerRelativeUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerRelativeUrlField, value) != true)) {
                    this.ServerRelativeUrlField = value;
                    this.RaisePropertyChanged("ServerRelativeUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WelcomePage {
            get {
                return this.WelcomePageField;
            }
            set {
                if ((object.ReferenceEquals(this.WelcomePageField, value) != true)) {
                    this.WelcomePageField = value;
                    this.RaisePropertyChanged("WelcomePage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SPArchivosInfo", Namespace="http://schemas.datacontract.org/2004/07/Infopoint.NET.SharepointType")]
    [System.SerializableAttribute()]
    public partial class SPArchivosInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string accionResultadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string archivoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string archivoRutaCompletaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string carpetaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string listaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string numSerieField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string polizaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string sitioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string accionResultado {
            get {
                return this.accionResultadoField;
            }
            set {
                if ((object.ReferenceEquals(this.accionResultadoField, value) != true)) {
                    this.accionResultadoField = value;
                    this.RaisePropertyChanged("accionResultado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string archivo {
            get {
                return this.archivoField;
            }
            set {
                if ((object.ReferenceEquals(this.archivoField, value) != true)) {
                    this.archivoField = value;
                    this.RaisePropertyChanged("archivo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string archivoRutaCompleta {
            get {
                return this.archivoRutaCompletaField;
            }
            set {
                if ((object.ReferenceEquals(this.archivoRutaCompletaField, value) != true)) {
                    this.archivoRutaCompletaField = value;
                    this.RaisePropertyChanged("archivoRutaCompleta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string carpeta {
            get {
                return this.carpetaField;
            }
            set {
                if ((object.ReferenceEquals(this.carpetaField, value) != true)) {
                    this.carpetaField = value;
                    this.RaisePropertyChanged("carpeta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lista {
            get {
                return this.listaField;
            }
            set {
                if ((object.ReferenceEquals(this.listaField, value) != true)) {
                    this.listaField = value;
                    this.RaisePropertyChanged("lista");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string numSerie {
            get {
                return this.numSerieField;
            }
            set {
                if ((object.ReferenceEquals(this.numSerieField, value) != true)) {
                    this.numSerieField = value;
                    this.RaisePropertyChanged("numSerie");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string poliza {
            get {
                return this.polizaField;
            }
            set {
                if ((object.ReferenceEquals(this.polizaField, value) != true)) {
                    this.polizaField = value;
                    this.RaisePropertyChanged("poliza");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string sitio {
            get {
                return this.sitioField;
            }
            set {
                if ((object.ReferenceEquals(this.sitioField, value) != true)) {
                    this.sitioField = value;
                    this.RaisePropertyChanged("sitio");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientValueObject", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.SharePoint.Client")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebApiFinbeCore.Domain.SPFileUpload.FileCreationInformation))]
    public partial class ClientValueObject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileCreationInformation", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.SharePoint.Client")]
    [System.SerializableAttribute()]
    public partial class FileCreationInformation : WebApiFinbeCore.Domain.SPFileUpload.ClientValueObject {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OverwriteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Overwrite {
            get {
                return this.OverwriteField;
            }
            set {
                if ((this.OverwriteField.Equals(value) != true)) {
                    this.OverwriteField = value;
                    this.RaisePropertyChanged("Overwrite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SPDatosSitio", Namespace="http://schemas.datacontract.org/2004/07/Infopoint.NET.SharepointType")]
    [System.SerializableAttribute()]
    public partial class SPDatosSitio : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarpetaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ListaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string URLSitioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool esTituloListaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Carpeta {
            get {
                return this.CarpetaField;
            }
            set {
                if ((object.ReferenceEquals(this.CarpetaField, value) != true)) {
                    this.CarpetaField = value;
                    this.RaisePropertyChanged("Carpeta");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lista {
            get {
                return this.ListaField;
            }
            set {
                if ((object.ReferenceEquals(this.ListaField, value) != true)) {
                    this.ListaField = value;
                    this.RaisePropertyChanged("Lista");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URLSitio {
            get {
                return this.URLSitioField;
            }
            set {
                if ((object.ReferenceEquals(this.URLSitioField, value) != true)) {
                    this.URLSitioField = value;
                    this.RaisePropertyChanged("URLSitio");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool esTituloLista {
            get {
                return this.esTituloListaField;
            }
            set {
                if ((this.esTituloListaField.Equals(value) != true)) {
                    this.esTituloListaField = value;
                    this.RaisePropertyChanged("esTituloLista");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DatosSitioDestino", Namespace="http://schemas.datacontract.org/2004/07/SPFileUploadService")]
    [System.SerializableAttribute()]
    public partial class DatosSitioDestino : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApiFinbeCore.Domain.SPFileUpload.Credenciales CredencialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio SitioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApiFinbeCore.Domain.SPFileUpload.Credenciales Credencial {
            get {
                return this.CredencialField;
            }
            set {
                if ((object.ReferenceEquals(this.CredencialField, value) != true)) {
                    this.CredencialField = value;
                    this.RaisePropertyChanged("Credencial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio Sitio {
            get {
                return this.SitioField;
            }
            set {
                if ((object.ReferenceEquals(this.SitioField, value) != true)) {
                    this.SitioField = value;
                    this.RaisePropertyChanged("Sitio");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="accionSPArchivo", Namespace="http://schemas.datacontract.org/2004/07/SPFileUploadService")]
    public enum accionSPArchivo : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SobreEscribir = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoSobreEscribir = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SPFileUpload.ISPFileUpload")]
    public interface ISPFileUpload {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/TipoDeAutenticación", ReplyAction="http://tempuri.org/ISPFileUpload/TipoDeAutenticaciónResponse")]
        WebApiFinbeCore.Domain.SPFileUpload.SPClientAuthenticationMode TipoDeAutenticación(string webURLSitio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/TipoDeAutenticación", ReplyAction="http://tempuri.org/ISPFileUpload/TipoDeAutenticaciónResponse")]
        System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPClientAuthenticationMode> TipoDeAutenticaciónAsync(string webURLSitio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/AutenticaUsuario", ReplyAction="http://tempuri.org/ISPFileUpload/AutenticaUsuarioResponse")]
        bool AutenticaUsuario(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/AutenticaUsuario", ReplyAction="http://tempuri.org/ISPFileUpload/AutenticaUsuarioResponse")]
        System.Threading.Tasks.Task<bool> AutenticaUsuarioAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/ObtenColeccionDeListas", ReplyAction="http://tempuri.org/ISPFileUpload/ObtenColeccionDeListasResponse")]
        WebApiFinbeCore.Domain.SPFileUpload.SPList[] ObtenColeccionDeListas(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, WebApiFinbeCore.Domain.SPFileUpload.SPFormaDatos queCampos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/ObtenColeccionDeListas", ReplyAction="http://tempuri.org/ISPFileUpload/ObtenColeccionDeListasResponse")]
        System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPList[]> ObtenColeccionDeListasAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, WebApiFinbeCore.Domain.SPFileUpload.SPFormaDatos queCampos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/AceptaDocumentos", ReplyAction="http://tempuri.org/ISPFileUpload/AceptaDocumentosResponse")]
        bool AceptaDocumentos(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string tituloLista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/AceptaDocumentos", ReplyAction="http://tempuri.org/ISPFileUpload/AceptaDocumentosResponse")]
        System.Threading.Tasks.Task<bool> AceptaDocumentosAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string tituloLista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/ObtenColeccionDeCarpetas", ReplyAction="http://tempuri.org/ISPFileUpload/ObtenColeccionDeCarpetasResponse")]
        WebApiFinbeCore.Domain.SPFileUpload.SPFolder[] ObtenColeccionDeCarpetas(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/ObtenColeccionDeCarpetas", ReplyAction="http://tempuri.org/ISPFileUpload/ObtenColeccionDeCarpetasResponse")]
        System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPFolder[]> ObtenColeccionDeCarpetasAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/ObtenColeccionDeInformacionDeArchivos", ReplyAction="http://tempuri.org/ISPFileUpload/ObtenColeccionDeInformacionDeArchivosResponse")]
        WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[] ObtenColeccionDeInformacionDeArchivos(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/ObtenColeccionDeInformacionDeArchivos", ReplyAction="http://tempuri.org/ISPFileUpload/ObtenColeccionDeInformacionDeArchivosResponse")]
        System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[]> ObtenColeccionDeInformacionDeArchivosAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/CargaArchivo", ReplyAction="http://tempuri.org/ISPFileUpload/CargaArchivoResponse")]
        bool CargaArchivo(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string tituloLista, bool estitulolista, string carpeta, WebApiFinbeCore.Domain.SPFileUpload.FileCreationInformation archivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/CargaArchivo", ReplyAction="http://tempuri.org/ISPFileUpload/CargaArchivoResponse")]
        System.Threading.Tasks.Task<bool> CargaArchivoAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string tituloLista, bool estitulolista, string carpeta, WebApiFinbeCore.Domain.SPFileUpload.FileCreationInformation archivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/DescargaArchivo", ReplyAction="http://tempuri.org/ISPFileUpload/DescargaArchivoResponse")]
        System.IO.Stream DescargaArchivo(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/DescargaArchivo", ReplyAction="http://tempuri.org/ISPFileUpload/DescargaArchivoResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> DescargaArchivoAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/DescargaArchivoPorNombre", ReplyAction="http://tempuri.org/ISPFileUpload/DescargaArchivoPorNombreResponse")]
        System.IO.Stream DescargaArchivoPorNombre(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta, string nombreArchivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/DescargaArchivoPorNombre", ReplyAction="http://tempuri.org/ISPFileUpload/DescargaArchivoPorNombreResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> DescargaArchivoPorNombreAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta, string nombreArchivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/ObtenNombreFileStream", ReplyAction="http://tempuri.org/ISPFileUpload/ObtenNombreFileStreamResponse")]
        string ObtenNombreFileStream(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/ObtenNombreFileStream", ReplyAction="http://tempuri.org/ISPFileUpload/ObtenNombreFileStreamResponse")]
        System.Threading.Tasks.Task<string> ObtenNombreFileStreamAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/MoverArchivo", ReplyAction="http://tempuri.org/ISPFileUpload/MoverArchivoResponse")]
        WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo MoverArchivo(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string nombreArchivo, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/MoverArchivo", ReplyAction="http://tempuri.org/ISPFileUpload/MoverArchivoResponse")]
        System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo> MoverArchivoAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string nombreArchivo, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/MoverArchivos", ReplyAction="http://tempuri.org/ISPFileUpload/MoverArchivosResponse")]
        WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[] MoverArchivos(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string[] listaArchivos, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/MoverArchivos", ReplyAction="http://tempuri.org/ISPFileUpload/MoverArchivosResponse")]
        System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[]> MoverArchivosAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string[] listaArchivos, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/CopiarArchivo", ReplyAction="http://tempuri.org/ISPFileUpload/CopiarArchivoResponse")]
        WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo CopiarArchivo(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string nombreArchivo, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/CopiarArchivo", ReplyAction="http://tempuri.org/ISPFileUpload/CopiarArchivoResponse")]
        System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo> CopiarArchivoAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string nombreArchivo, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/CopiarArchivos", ReplyAction="http://tempuri.org/ISPFileUpload/CopiarArchivosResponse")]
        WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[] CopiarArchivos(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string[] listaArchivos, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/CopiarArchivos", ReplyAction="http://tempuri.org/ISPFileUpload/CopiarArchivosResponse")]
        System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[]> CopiarArchivosAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string[] listaArchivos, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/EliminarArchivo", ReplyAction="http://tempuri.org/ISPFileUpload/EliminarArchivoResponse")]
        WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo EliminarArchivo(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitio, string nombreArchivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/EliminarArchivo", ReplyAction="http://tempuri.org/ISPFileUpload/EliminarArchivoResponse")]
        System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo> EliminarArchivoAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitio, string nombreArchivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/EliminarArchivos", ReplyAction="http://tempuri.org/ISPFileUpload/EliminarArchivosResponse")]
        WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[] EliminarArchivos(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitio, string[] listaArchivos);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISPFileUpload/EliminarArchivos", ReplyAction="http://tempuri.org/ISPFileUpload/EliminarArchivosResponse")]
        System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[]> EliminarArchivosAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitio, string[] listaArchivos);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISPFileUploadChannel : WebApiFinbeCore.Domain.SPFileUpload.ISPFileUpload, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SPFileUploadClient : System.ServiceModel.ClientBase<WebApiFinbeCore.Domain.SPFileUpload.ISPFileUpload>, WebApiFinbeCore.Domain.SPFileUpload.ISPFileUpload {
        
        public SPFileUploadClient() {
        }
        
        public SPFileUploadClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SPFileUploadClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SPFileUploadClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SPFileUploadClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApiFinbeCore.Domain.SPFileUpload.SPClientAuthenticationMode TipoDeAutenticación(string webURLSitio) {
            return base.Channel.TipoDeAutenticación(webURLSitio);
        }
        
        public System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPClientAuthenticationMode> TipoDeAutenticaciónAsync(string webURLSitio) {
            return base.Channel.TipoDeAutenticaciónAsync(webURLSitio);
        }
        
        public bool AutenticaUsuario(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio) {
            return base.Channel.AutenticaUsuario(credencial, webURLSitio);
        }
        
        public System.Threading.Tasks.Task<bool> AutenticaUsuarioAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio) {
            return base.Channel.AutenticaUsuarioAsync(credencial, webURLSitio);
        }
        
        public WebApiFinbeCore.Domain.SPFileUpload.SPList[] ObtenColeccionDeListas(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, WebApiFinbeCore.Domain.SPFileUpload.SPFormaDatos queCampos) {
            return base.Channel.ObtenColeccionDeListas(credencial, webURLSitio, queCampos);
        }
        
        public System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPList[]> ObtenColeccionDeListasAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, WebApiFinbeCore.Domain.SPFileUpload.SPFormaDatos queCampos) {
            return base.Channel.ObtenColeccionDeListasAsync(credencial, webURLSitio, queCampos);
        }
        
        public bool AceptaDocumentos(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string tituloLista) {
            return base.Channel.AceptaDocumentos(credencial, webURLSitio, tituloLista);
        }
        
        public System.Threading.Tasks.Task<bool> AceptaDocumentosAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string tituloLista) {
            return base.Channel.AceptaDocumentosAsync(credencial, webURLSitio, tituloLista);
        }
        
        public WebApiFinbeCore.Domain.SPFileUpload.SPFolder[] ObtenColeccionDeCarpetas(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista) {
            return base.Channel.ObtenColeccionDeCarpetas(credencial, webURLSitio, nombreLista, esTituloLista);
        }
        
        public System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPFolder[]> ObtenColeccionDeCarpetasAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista) {
            return base.Channel.ObtenColeccionDeCarpetasAsync(credencial, webURLSitio, nombreLista, esTituloLista);
        }
        
        public WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[] ObtenColeccionDeInformacionDeArchivos(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta) {
            return base.Channel.ObtenColeccionDeInformacionDeArchivos(credencial, webURLSitio, nombreLista, esTituloLista, carpeta);
        }
        
        public System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[]> ObtenColeccionDeInformacionDeArchivosAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta) {
            return base.Channel.ObtenColeccionDeInformacionDeArchivosAsync(credencial, webURLSitio, nombreLista, esTituloLista, carpeta);
        }
        
        public bool CargaArchivo(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string tituloLista, bool estitulolista, string carpeta, WebApiFinbeCore.Domain.SPFileUpload.FileCreationInformation archivo) {
            return base.Channel.CargaArchivo(credencial, webURLSitio, tituloLista, estitulolista, carpeta, archivo);
        }
        
        public System.Threading.Tasks.Task<bool> CargaArchivoAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string tituloLista, bool estitulolista, string carpeta, WebApiFinbeCore.Domain.SPFileUpload.FileCreationInformation archivo) {
            return base.Channel.CargaArchivoAsync(credencial, webURLSitio, tituloLista, estitulolista, carpeta, archivo);
        }
        
        public System.IO.Stream DescargaArchivo(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta) {
            return base.Channel.DescargaArchivo(credencial, webURLSitio, nombreLista, esTituloLista, carpeta);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> DescargaArchivoAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta) {
            return base.Channel.DescargaArchivoAsync(credencial, webURLSitio, nombreLista, esTituloLista, carpeta);
        }
        
        public System.IO.Stream DescargaArchivoPorNombre(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta, string nombreArchivo) {
            return base.Channel.DescargaArchivoPorNombre(credencial, webURLSitio, nombreLista, esTituloLista, carpeta, nombreArchivo);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> DescargaArchivoPorNombreAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta, string nombreArchivo) {
            return base.Channel.DescargaArchivoPorNombreAsync(credencial, webURLSitio, nombreLista, esTituloLista, carpeta, nombreArchivo);
        }
        
        public string ObtenNombreFileStream(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta) {
            return base.Channel.ObtenNombreFileStream(credencial, webURLSitio, nombreLista, esTituloLista, carpeta);
        }
        
        public System.Threading.Tasks.Task<string> ObtenNombreFileStreamAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, string webURLSitio, string nombreLista, bool esTituloLista, string carpeta) {
            return base.Channel.ObtenNombreFileStreamAsync(credencial, webURLSitio, nombreLista, esTituloLista, carpeta);
        }
        
        public WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo MoverArchivo(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string nombreArchivo, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion) {
            return base.Channel.MoverArchivo(credencial, sitioOrigen, sitioDestino, nombreArchivo, tipoAccion);
        }
        
        public System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo> MoverArchivoAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string nombreArchivo, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion) {
            return base.Channel.MoverArchivoAsync(credencial, sitioOrigen, sitioDestino, nombreArchivo, tipoAccion);
        }
        
        public WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[] MoverArchivos(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string[] listaArchivos, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion) {
            return base.Channel.MoverArchivos(credencial, sitioOrigen, sitioDestino, listaArchivos, tipoAccion);
        }
        
        public System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[]> MoverArchivosAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string[] listaArchivos, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion) {
            return base.Channel.MoverArchivosAsync(credencial, sitioOrigen, sitioDestino, listaArchivos, tipoAccion);
        }
        
        public WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo CopiarArchivo(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string nombreArchivo, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion) {
            return base.Channel.CopiarArchivo(credencial, sitioOrigen, sitioDestino, nombreArchivo, tipoAccion);
        }
        
        public System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo> CopiarArchivoAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string nombreArchivo, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion) {
            return base.Channel.CopiarArchivoAsync(credencial, sitioOrigen, sitioDestino, nombreArchivo, tipoAccion);
        }
        
        public WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[] CopiarArchivos(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string[] listaArchivos, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion) {
            return base.Channel.CopiarArchivos(credencial, sitioOrigen, sitioDestino, listaArchivos, tipoAccion);
        }
        
        public System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[]> CopiarArchivosAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitioOrigen, WebApiFinbeCore.Domain.SPFileUpload.DatosSitioDestino sitioDestino, string[] listaArchivos, WebApiFinbeCore.Domain.SPFileUpload.accionSPArchivo tipoAccion) {
            return base.Channel.CopiarArchivosAsync(credencial, sitioOrigen, sitioDestino, listaArchivos, tipoAccion);
        }
        
        public WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo EliminarArchivo(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitio, string nombreArchivo) {
            return base.Channel.EliminarArchivo(credencial, sitio, nombreArchivo);
        }
        
        public System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo> EliminarArchivoAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitio, string nombreArchivo) {
            return base.Channel.EliminarArchivoAsync(credencial, sitio, nombreArchivo);
        }
        
        public WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[] EliminarArchivos(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitio, string[] listaArchivos) {
            return base.Channel.EliminarArchivos(credencial, sitio, listaArchivos);
        }
        
        public System.Threading.Tasks.Task<WebApiFinbeCore.Domain.SPFileUpload.SPArchivosInfo[]> EliminarArchivosAsync(WebApiFinbeCore.Domain.SPFileUpload.Credenciales credencial, WebApiFinbeCore.Domain.SPFileUpload.SPDatosSitio sitio, string[] listaArchivos) {
            return base.Channel.EliminarArchivosAsync(credencial, sitio, listaArchivos);
        }
    }
}
